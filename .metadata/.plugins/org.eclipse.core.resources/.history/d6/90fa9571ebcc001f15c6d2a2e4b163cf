

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;

public class Insert {
    public static void main(String[] args) {
        // MySQL 접속 정보
        String url = "jdbc:mysql://localhost:3306/spring";  // your_database_name을 실제 데이터베이스 이름으로 바꿔주세요.
        String uid = "spring";  // MySQL 사용자명
        String upw = "spring";  // MySQL 비밀번호

        // Scanner를 이용하여 사용자로부터 조회할 ID 입력 받기
        Scanner sc = new Scanner(System.in);
//        System.out.print("조회할 아이디 입력 > ");
//        String id = sc.next();

        // SQL 쿼리문 (ID로 회원 정보 조회)
        String sql = "SELECT  * FROM memo";

        // 데이터베이스 연결을 위한 변수 선언
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            // MySQL JDBC 드라이버 로드
            Class.forName("com.mysql.cj.jdbc.Driver");

            // MySQL 데이터베이스 연결
            conn = DriverManager.getConnection(url, uid, upw);

            // PreparedStatement 객체 생성
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, id);  // 입력된 ID를 쿼리에 바인딩

            // SELECT 쿼리 실행 후 결과 받기
            rs = pstmt.executeQuery();  // 결과 집합을 받아옴

            // 결과가 존재하는지 확인
            if (rs.next()) {  // 첫 번째 행이 있으면 true, 없으면 false
                // 결과 집합에서 데이터 읽기
                String pw = rs.getString("PW");  // "PW" 컬럼
                int age = rs.getInt("AGE");      // "AGE" 컬럼
                String email = rs.getString("EMAIL");  // "EMAIL" 컬럼

                // 출력
                System.out.println("아이디: " + id);
                System.out.println("비밀번호: " + pw);
                System.out.println("나이: " + age);
                System.out.println("이메일: " + email);
            } else {
                System.out.println("해당 ID에 대한 회원 정보를 찾을 수 없습니다.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // 리소스 해제
            try {
                if (rs != null) rs.close();
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }
}
